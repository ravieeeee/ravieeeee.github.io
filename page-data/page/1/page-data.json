{"componentChunkName":"component---src-templates-index-template-js","path":"/page/1","webpackCompilationHash":"e85c8c4d3850956d7427","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/posts/leetcode-62/","categorySlug":"/category/algorithm/"},"frontmatter":{"title":"[Leetcode] Unique Paths","date":"2019-09-09","category":"Algorithm","description":"How many possible unique paths are there?"}}},{"node":{"fields":{"slug":"/posts/leetcode-103/","categorySlug":"/category/algorithm/"},"frontmatter":{"title":"[Leetcode] Binary Tree Zigzag Level Order Traversal","date":"2019-09-09","category":"Algorithm","description":"Given a binary tree, return the zigzag level order traversal of its nodes' values."}}},{"node":{"fields":{"slug":"/posts/programmers-무지의먹방라이브/","categorySlug":"/category/algorithm/"},"frontmatter":{"title":"[프로그래머스] 무지의 먹방 라이브","date":"2019-09-06","category":"Algorithm","description":"각 음식을 모두 먹는데 필요한 시간이 담겨있는 배열 food_times, 네트워크 장애가 발생한 시간 K 초가 매개변수로 주어질 때 몇 번 음식부터 다시 섭취하면 되는지 return 하도록 solution 함수를 완성하라."}}},{"node":{"fields":{"slug":"/posts/leetcode-42/","categorySlug":"/category/algorithm/"},"frontmatter":{"title":"[Leetcode] Trapping Rain Water","date":"2019-09-05","category":"Algorithm","description":"compute how much water it is able to trap after raining."}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"currentPage":1,"postsLimit":4,"postsOffset":4,"prevPagePath":"/","nextPagePath":"/page/2","hasPrevPage":true,"hasNextPage":true}}}