{"componentChunkName":"component---src-templates-index-template-js","path":"/page/6","webpackCompilationHash":"9254c7fbbc0ce0bd203e","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/posts/boj-17135/","categorySlug":"/category/algorithm/"},"frontmatter":{"title":"[BOJ 17135] 캐슬 디펜스","date":"2019-09-19","category":"Algorithm","description":"격자판의 상태가 주어졌을 때, 궁수의 공격으로 제거할 수 있는 적의 최대 수를 계산해보자."}}},{"node":{"fields":{"slug":"/posts/leetcode-124/","categorySlug":"/category/algorithm/"},"frontmatter":{"title":"[Leetcode] Binary Tree Maximum Path Sum","date":"2019-09-18","category":"Algorithm","description":"Given a non-empty binary tree, find the maximum path sum."}}},{"node":{"fields":{"slug":"/posts/leetcode-105/","categorySlug":"/category/algorithm/"},"frontmatter":{"title":"[Leetcode] Construct Binary Tree from Preorder and Inorder Traversal","date":"2019-09-17","category":"Algorithm","description":"Given preorder and inorder traversal of a tree, construct the binary tree."}}},{"node":{"fields":{"slug":"/posts/leetcode-2/","categorySlug":"/category/algorithm/"},"frontmatter":{"title":"[Leetcode] Add Two Numbers","date":"2019-09-09","category":"Algorithm","description":"Add the two numbers and return it as a linked list."}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"currentPage":6,"postsLimit":4,"postsOffset":24,"prevPagePath":"/page/5","nextPagePath":"/page/7","hasPrevPage":true,"hasNextPage":true}}}