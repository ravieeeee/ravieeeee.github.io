{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/boj-7662/","webpackCompilationHash":"01c65c70a8e2e67c9885","result":{"data":{"markdownRemark":{"id":"15c906d7-c576-51a7-8bdd-5db66df971b1","html":"<h1 id=\"문제\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h1>\n<p>이중 우선순위 큐(dual priority queue)는 전형적인 우선순위 큐처럼 데이터를 삽입, 삭제할 수 있는 자료 구조이다. 전형적인 큐와의 차이점은 데이터를 삭제할 때 연산(operation) 명령에 따라 우선순위가 가장 높은 데이터 또는 가장 낮은 데이터 중 하나를 삭제하는 점이다. 이중 우선순위 큐를 위해선 두 가지 연산이 사용되는데, 하나는 데이터를 삽입하는 연산이고 다른 하나는 데이터를 삭제하는 연산이다. 데이터를 삭제하는 연산은 또 두 가지로 구분되는데 하나는 우선순위가 가장 높은 것을 삭제하기 위한 것이고 다른 하나는 우선순위가 가장 낮은 것을 삭제하기 위한 것이다. </p>\n<p>정수만 저장하는 이중 우선순위 큐 Q가 있다고 가정하자. Q에 저장된 각 정수의 값 자체를 우선순위라고 간주하자. </p>\n<p>Q에 적용될 일련의 연산이 주어질 때 이를 처리한 후 최종적으로 Q에 저장된 데이터 중 최댓값과 최솟값을 출력하는 프로그램을 작성하라. <a href=\"https://www.acmicpc.net/problem/7662\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">baekjoon</a></p>\n<h1 id=\"코드\"><a href=\"#%EC%BD%94%EB%93%9C\" aria-label=\"코드 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드</h1>\n<pre class=\"default-dark vscode-highlight\" data-language=\"c\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk15\">#include</span><span class=\"mtk4\"> </span><span class=\"mtk8\">&lt;iostream&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk15\">#include</span><span class=\"mtk4\"> </span><span class=\"mtk8\">&lt;vector&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk15\">#include</span><span class=\"mtk4\"> </span><span class=\"mtk8\">&lt;queue&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk15\">#include</span><span class=\"mtk4\"> </span><span class=\"mtk8\">&lt;limits.h&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\"></span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">using namespace std;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\"></span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk11\">main</span><span class=\"mtk1\">() {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> tc;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  cin &gt;&gt; tc;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\"></span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  </span><span class=\"mtk15\">while</span><span class=\"mtk1\"> (tc--) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> k;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    cin &gt;&gt; k;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\"></span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    vector&lt;</span><span class=\"mtk4\">bool</span><span class=\"mtk1\">&gt; </span><span class=\"mtk11\">is_in</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1000000</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// first: value, second: cmd index</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    priority_queue&lt;pair&lt;</span><span class=\"mtk4\">int</span><span class=\"mtk1\">, </span><span class=\"mtk4\">int</span><span class=\"mtk1\">&gt;&gt; pq_down;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    priority_queue&lt;pair&lt;</span><span class=\"mtk4\">int</span><span class=\"mtk1\">, </span><span class=\"mtk4\">int</span><span class=\"mtk1\">&gt;, vector&lt;pair&lt;</span><span class=\"mtk4\">int</span><span class=\"mtk1\">, </span><span class=\"mtk4\">int</span><span class=\"mtk1\">&gt;&gt;, greater&lt;pair&lt;</span><span class=\"mtk4\">int</span><span class=\"mtk1\">, </span><span class=\"mtk4\">int</span><span class=\"mtk1\">&gt;&gt;&gt; pq_up;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\"></span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">int</span><span class=\"mtk1\"> i = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; i &lt; k; i++) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">      </span><span class=\"mtk4\">char</span><span class=\"mtk1\"> cmd;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">      </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> cmd_int;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">      cin &gt;&gt; cmd &gt;&gt; cmd_int;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\"></span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">      </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (cmd == </span><span class=\"mtk8\">&#39;I&#39;</span><span class=\"mtk1\">) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk12\">pq_down</span><span class=\"mtk1\">.</span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span><span class=\"mtk11\">make_pair</span><span class=\"mtk1\">(cmd_int, i));</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk12\">pq_up</span><span class=\"mtk1\">.</span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span><span class=\"mtk11\">make_pair</span><span class=\"mtk1\">(cmd_int, i));</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk12\">is_in</span><span class=\"mtk1\">[i] = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">      } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// D</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (cmd_int == </span><span class=\"mtk7\">1</span><span class=\"mtk1\">) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">          </span><span class=\"mtk15\">while</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">pq_down</span><span class=\"mtk1\">.</span><span class=\"mtk11\">empty</span><span class=\"mtk1\">() &amp;&amp; !</span><span class=\"mtk12\">is_in</span><span class=\"mtk1\">[</span><span class=\"mtk12\">pq_down</span><span class=\"mtk1\">.</span><span class=\"mtk11\">top</span><span class=\"mtk1\">().</span><span class=\"mtk12\">second</span><span class=\"mtk1\">]) </span><span class=\"mtk12\">pq_down</span><span class=\"mtk1\">.</span><span class=\"mtk11\">pop</span><span class=\"mtk1\">();</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">          </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">pq_down</span><span class=\"mtk1\">.</span><span class=\"mtk11\">empty</span><span class=\"mtk1\">()) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">            </span><span class=\"mtk12\">is_in</span><span class=\"mtk1\">[</span><span class=\"mtk12\">pq_down</span><span class=\"mtk1\">.</span><span class=\"mtk11\">top</span><span class=\"mtk1\">().</span><span class=\"mtk12\">second</span><span class=\"mtk1\">] = </span><span class=\"mtk4\">false</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">            </span><span class=\"mtk12\">pq_down</span><span class=\"mtk1\">.</span><span class=\"mtk11\">pop</span><span class=\"mtk1\">();</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">          }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">          </span><span class=\"mtk15\">while</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">pq_up</span><span class=\"mtk1\">.</span><span class=\"mtk11\">empty</span><span class=\"mtk1\">() &amp;&amp; !</span><span class=\"mtk12\">is_in</span><span class=\"mtk1\">[</span><span class=\"mtk12\">pq_up</span><span class=\"mtk1\">.</span><span class=\"mtk11\">top</span><span class=\"mtk1\">().</span><span class=\"mtk12\">second</span><span class=\"mtk1\">]) </span><span class=\"mtk12\">pq_up</span><span class=\"mtk1\">.</span><span class=\"mtk11\">pop</span><span class=\"mtk1\">();</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">          </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">pq_up</span><span class=\"mtk1\">.</span><span class=\"mtk11\">empty</span><span class=\"mtk1\">()) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">            </span><span class=\"mtk12\">is_in</span><span class=\"mtk1\">[</span><span class=\"mtk12\">pq_up</span><span class=\"mtk1\">.</span><span class=\"mtk11\">top</span><span class=\"mtk1\">().</span><span class=\"mtk12\">second</span><span class=\"mtk1\">] = </span><span class=\"mtk4\">false</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">            </span><span class=\"mtk12\">pq_up</span><span class=\"mtk1\">.</span><span class=\"mtk11\">pop</span><span class=\"mtk1\">();</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">          }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">      }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\"></span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk15\">while</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">pq_down</span><span class=\"mtk1\">.</span><span class=\"mtk11\">empty</span><span class=\"mtk1\">() &amp;&amp; !</span><span class=\"mtk12\">is_in</span><span class=\"mtk1\">[</span><span class=\"mtk12\">pq_down</span><span class=\"mtk1\">.</span><span class=\"mtk11\">top</span><span class=\"mtk1\">().</span><span class=\"mtk12\">second</span><span class=\"mtk1\">]) </span><span class=\"mtk12\">pq_down</span><span class=\"mtk1\">.</span><span class=\"mtk11\">pop</span><span class=\"mtk1\">();</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk15\">while</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">pq_up</span><span class=\"mtk1\">.</span><span class=\"mtk11\">empty</span><span class=\"mtk1\">() &amp;&amp; !</span><span class=\"mtk12\">is_in</span><span class=\"mtk1\">[</span><span class=\"mtk12\">pq_up</span><span class=\"mtk1\">.</span><span class=\"mtk11\">top</span><span class=\"mtk1\">().</span><span class=\"mtk12\">second</span><span class=\"mtk1\">]) </span><span class=\"mtk12\">pq_up</span><span class=\"mtk1\">.</span><span class=\"mtk11\">pop</span><span class=\"mtk1\">();</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\"></span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    string result;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">pq_down</span><span class=\"mtk1\">.</span><span class=\"mtk11\">empty</span><span class=\"mtk1\">() &amp;&amp; </span><span class=\"mtk12\">pq_up</span><span class=\"mtk1\">.</span><span class=\"mtk11\">empty</span><span class=\"mtk1\">()) result = </span><span class=\"mtk8\">&quot;EMPTY&quot;</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> result = </span><span class=\"mtk11\">to_string</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pq_down</span><span class=\"mtk1\">.</span><span class=\"mtk11\">top</span><span class=\"mtk1\">().</span><span class=\"mtk12\">first</span><span class=\"mtk1\">) + </span><span class=\"mtk8\">&quot; &quot;</span><span class=\"mtk1\"> + </span><span class=\"mtk11\">to_string</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pq_up</span><span class=\"mtk1\">.</span><span class=\"mtk11\">top</span><span class=\"mtk1\">().</span><span class=\"mtk12\">first</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    cout &lt;&lt; result &lt;&lt; endl;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span></code></pre>\n<h1 id=\"풀이\"><a href=\"#%ED%92%80%EC%9D%B4\" aria-label=\"풀이 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>풀이</h1>\n<p>우선순위 큐를 2개 준비한다. 하나는 큰 수가 우선순위가 높은, 즉 오름차순으로 정렬되는 큐와 다른 하나는 내림차순으로 정렬(이게 기본값)되는 큐다. <code>I</code> 명령에는 두 큐에 모두 삽입한다. <code>D</code> 명령시 하나의 큐에서만 삭제하게 되지만, 다른 큐에서도 이 값은 삭제되어야 한다. 하지만 즉각적으로 삭제하기엔 해당 값을 찾아서 삭제해야 하는데 비효율적이기도 하고, 기본적으로 제공되는 메소드가 없어서 불편하다. 결국 해당 값이 유효하지 않다는 표시(<code>is_in</code>)만 하고, 각 큐의 값에 접근할 일이 있을 때마다 이게 유효한지 안 유효한지 표식을 확인하면 된다.</p>\n<p>원래 삽입되는 값을 통해 표시하는게 더 직관적으로 생각났었다. 같은 숫자가 여러번 나올 수 있으므로 <code>vector&#x3C;int> is_in(INT_MAX)</code> 이런식으로 하려고 했었다. 하지만 스택이 너무 작아서 21억 크기만큼 메모리를 미리 잡아먹는게 안되나보다. <code>new</code>로 동적 할당해서 힙에 생성해야 하는데 벡터의 주소가 넘어오기 때문에 이용하기가 매우 불편하다. 애초에 저만한 크기가 필요하다는 것 자체가 잘못 푼게 아닌가 싶다. 그래서 여기서는 값의 유효성을 명령어의 순서로 판단한다. 순서는 중복이 생길 수 없으니 <code>bool</code>로 표기해도 문제가 없다.</p>\n<style class=\"vscode-highlight-styles\">:root {\n  --vscode-highlight-padding-v: 1rem;\n  --vscode-highlight-padding-h: 1.5rem;\n  --vscode-highlight-padding-top: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-right: var(--vscode-highlight-padding-h);\n  --vscode-highlight-padding-bottom: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-left: var(--vscode-highlight-padding-h);\n  --vscode-highlight-border-radius: 8px;\n\n  --vscode-highlight-line-highlighted-background-color: transparent;\n  --vscode-highlight-line-highlighted-border-width: 4px;\n  --vscode-highlight-line-highlighted-border-color: transparent;\n}\n\n.vscode-highlight {\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n  padding-top: 1rem;\n  padding-top: var(--vscode-highlight-padding-top);\n  padding-bottom: 1rem;\n  padding-bottom: var(--vscode-highlight-padding-bottom);\n  border-radius: 8px;\n  border-radius: var(--vscode-highlight-border-radius);\n  font-feature-settings: normal;\n}\n\n.vscode-highlight-code {\n  display: inline-block;\n  min-width: 100%;\n}\n\n.vscode-highlight-line {\n  display: inline-block;\n  box-sizing: border-box;\n  width: 100%;\n  padding-left: 1.5rem;\n  padding-left: var(--vscode-highlight-padding-left);\n  padding-right: 1.5rem;\n  padding-right: var(--vscode-highlight-padding-right);\n}\n\n.vscode-highlight-line-highlighted {\n  background-color: var(--vscode-highlight-line-highlighted-background-color);\n  box-shadow: inset var(--vscode-highlight-line-highlighted-border-width) 0 0 0 var(--vscode-highlight-line-highlighted-border-color);\n}\n.default-dark {\nbackground-color: #1E1E1E;\ncolor: #D4D4D4;\n}\n\n.default-dark .mtk1 { color: #D4D4D4; }\n.default-dark .mtk2 { color: #1E1E1E; }\n.default-dark .mtk3 { color: #6A9955; }\n.default-dark .mtk4 { color: #569CD6; }\n.default-dark .mtk5 { color: #D16969; }\n.default-dark .mtk6 { color: #D7BA7D; }\n.default-dark .mtk7 { color: #B5CEA8; }\n.default-dark .mtk8 { color: #CE9178; }\n.default-dark .mtk9 { color: #646695; }\n.default-dark .mtk10 { color: #4EC9B0; }\n.default-dark .mtk11 { color: #DCDCAA; }\n.default-dark .mtk12 { color: #9CDCFE; }\n.default-dark .mtk13 { color: #000080; }\n.default-dark .mtk14 { color: #F44747; }\n.default-dark .mtk15 { color: #C586C0; }\n.default-dark .mtk16 { color: #6796E6; }\n.default-dark .mtk17 { color: #808080; }\n.default-dark .mtki { font-style: italic; }\n.default-dark .mtkb { font-weight: bold; }\n.default-dark .mtku { text-decoration: underline; text-underline-position: under; }</style>","fields":{"slug":"/posts/boj-7662/","tagSlugs":["/tag/baekjoon/"]},"frontmatter":{"date":"2019-09-21","description":"Q에 적용될 일련의 연산이 주어질 때 이를 처리한 후 최종적으로 Q에 저장된 데이터 중 최댓값과 최솟값을 출력하는 프로그램을 작성하라.","tags":["Baekjoon"],"title":"[BOJ 7662] 이중 우선순위 큐","socialImage":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/boj-7662/"}}}