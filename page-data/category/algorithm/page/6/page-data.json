{"componentChunkName":"component---src-templates-category-template-js","path":"/category/algorithm/page/6","webpackCompilationHash":"7f53535258db0a6903aa","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"fields":{"categorySlug":"/category/algorithm/","slug":"/posts/leetcode-103/"},"frontmatter":{"date":"2019-09-09","description":"Given a binary tree, return the zigzag level order traversal of its nodes' values.","category":"Algorithm","title":"[Leetcode] Binary Tree Zigzag Level Order Traversal"}}},{"node":{"fields":{"categorySlug":"/category/algorithm/","slug":"/posts/programmers-무지의먹방라이브/"},"frontmatter":{"date":"2019-09-06","description":"각 음식을 모두 먹는데 필요한 시간이 담겨있는 배열 food_times, 네트워크 장애가 발생한 시간 K 초가 매개변수로 주어질 때 몇 번 음식부터 다시 섭취하면 되는지 return 하도록 solution 함수를 완성하라.","category":"Algorithm","title":"[프로그래머스] 무지의 먹방 라이브"}}},{"node":{"fields":{"categorySlug":"/category/algorithm/","slug":"/posts/leetcode-42/"},"frontmatter":{"date":"2019-09-05","description":"compute how much water it is able to trap after raining.","category":"Algorithm","title":"[Leetcode] Trapping Rain Water"}}},{"node":{"fields":{"categorySlug":"/category/algorithm/","slug":"/posts/leetcode-24/"},"frontmatter":{"date":"2019-09-04","description":"Given a linked list, swap every two adjacent nodes and return its head.","category":"Algorithm","title":"[Leetcode] Swap Nodes in Pairs"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"category":"Algorithm","currentPage":6,"postsLimit":4,"postsOffset":24,"prevPagePath":"/category/algorithm/page/5","nextPagePath":"/category/algorithm/page/7","hasPrevPage":true,"hasNextPage":true}}}