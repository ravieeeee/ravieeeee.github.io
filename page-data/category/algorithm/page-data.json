{"componentChunkName":"component---src-templates-category-template-js","path":"/category/algorithm","webpackCompilationHash":"5633645a1643b3b05eb8","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"fields":{"categorySlug":"/category/algorithm/","slug":"/posts/leetcode-105/"},"frontmatter":{"date":"2019-09-17","description":"Given preorder and inorder traversal of a tree, construct the binary tree.","category":"Algorithm","title":"[Leetcode] Construct Binary Tree from Preorder and Inorder Traversal"}}},{"node":{"fields":{"categorySlug":"/category/algorithm/","slug":"/posts/leetcode-145/"},"frontmatter":{"date":"2019-09-11","description":"Given a binary tree, return the postorder traversal of its nodes' values.","category":"Algorithm","title":"[Leetcode] Binary Tree Postorder Traversal"}}},{"node":{"fields":{"categorySlug":"/category/algorithm/","slug":"/posts/leetcode-2/"},"frontmatter":{"date":"2019-09-09","description":"Add the two numbers and return it as a linked list.","category":"Algorithm","title":"[Leetcode] Add Two Numbers"}}},{"node":{"fields":{"categorySlug":"/category/algorithm/","slug":"/posts/leetcode-103/"},"frontmatter":{"date":"2019-09-09","description":"Given a binary tree, return the zigzag level order traversal of its nodes' values.","category":"Algorithm","title":"[Leetcode] Binary Tree Zigzag Level Order Traversal"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"category":"Algorithm","currentPage":0,"postsLimit":4,"postsOffset":0,"prevPagePath":"/category/algorithm","nextPagePath":"/category/algorithm/page/1","hasPrevPage":false,"hasNextPage":true}}}